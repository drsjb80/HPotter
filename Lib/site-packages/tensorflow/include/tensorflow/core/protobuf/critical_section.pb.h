// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/critical_section.proto

#ifndef PROTOBUF_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto__INCLUDED
#define PROTOBUF_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace tensorflow {
class CriticalSectionDef;
class CriticalSectionDefDefaultTypeInternal;
extern CriticalSectionDefDefaultTypeInternal _CriticalSectionDef_default_instance_;
class CriticalSectionExecutionDef;
class CriticalSectionExecutionDefDefaultTypeInternal;
extern CriticalSectionExecutionDefDefaultTypeInternal _CriticalSectionExecutionDef_default_instance_;
}  // namespace tensorflow

namespace tensorflow {

namespace protobuf_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto

// ===================================================================

class CriticalSectionDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.CriticalSectionDef) */ {
 public:
  CriticalSectionDef();
  virtual ~CriticalSectionDef();

  CriticalSectionDef(const CriticalSectionDef& from);

  inline CriticalSectionDef& operator=(const CriticalSectionDef& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CriticalSectionDef(CriticalSectionDef&& from) noexcept
    : CriticalSectionDef() {
    *this = ::std::move(from);
  }

  inline CriticalSectionDef& operator=(CriticalSectionDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CriticalSectionDef& default_instance();

  static inline const CriticalSectionDef* internal_default_instance() {
    return reinterpret_cast<const CriticalSectionDef*>(
               &_CriticalSectionDef_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(CriticalSectionDef* other);
  void Swap(CriticalSectionDef* other);
  friend void swap(CriticalSectionDef& a, CriticalSectionDef& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CriticalSectionDef* New() const PROTOBUF_FINAL { return New(NULL); }

  CriticalSectionDef* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CriticalSectionDef& from);
  void MergeFrom(const CriticalSectionDef& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CriticalSectionDef* other);
  protected:
  explicit CriticalSectionDef(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string critical_section_name = 1;
  void clear_critical_section_name();
  static const int kCriticalSectionNameFieldNumber = 1;
  const ::std::string& critical_section_name() const;
  void set_critical_section_name(const ::std::string& value);
  #if LANG_CXX11
  void set_critical_section_name(::std::string&& value);
  #endif
  void set_critical_section_name(const char* value);
  void set_critical_section_name(const char* value, size_t size);
  ::std::string* mutable_critical_section_name();
  ::std::string* release_critical_section_name();
  void set_allocated_critical_section_name(::std::string* critical_section_name);
  ::std::string* unsafe_arena_release_critical_section_name();
  void unsafe_arena_set_allocated_critical_section_name(
      ::std::string* critical_section_name);

  // @@protoc_insertion_point(class_scope:tensorflow.CriticalSectionDef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr critical_section_name_;
  mutable int _cached_size_;
  friend struct protobuf_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CriticalSectionExecutionDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.CriticalSectionExecutionDef) */ {
 public:
  CriticalSectionExecutionDef();
  virtual ~CriticalSectionExecutionDef();

  CriticalSectionExecutionDef(const CriticalSectionExecutionDef& from);

  inline CriticalSectionExecutionDef& operator=(const CriticalSectionExecutionDef& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CriticalSectionExecutionDef(CriticalSectionExecutionDef&& from) noexcept
    : CriticalSectionExecutionDef() {
    *this = ::std::move(from);
  }

  inline CriticalSectionExecutionDef& operator=(CriticalSectionExecutionDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CriticalSectionExecutionDef& default_instance();

  static inline const CriticalSectionExecutionDef* internal_default_instance() {
    return reinterpret_cast<const CriticalSectionExecutionDef*>(
               &_CriticalSectionExecutionDef_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(CriticalSectionExecutionDef* other);
  void Swap(CriticalSectionExecutionDef* other);
  friend void swap(CriticalSectionExecutionDef& a, CriticalSectionExecutionDef& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CriticalSectionExecutionDef* New() const PROTOBUF_FINAL { return New(NULL); }

  CriticalSectionExecutionDef* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CriticalSectionExecutionDef& from);
  void MergeFrom(const CriticalSectionExecutionDef& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CriticalSectionExecutionDef* other);
  protected:
  explicit CriticalSectionExecutionDef(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string execute_in_critical_section_name = 1;
  void clear_execute_in_critical_section_name();
  static const int kExecuteInCriticalSectionNameFieldNumber = 1;
  const ::std::string& execute_in_critical_section_name() const;
  void set_execute_in_critical_section_name(const ::std::string& value);
  #if LANG_CXX11
  void set_execute_in_critical_section_name(::std::string&& value);
  #endif
  void set_execute_in_critical_section_name(const char* value);
  void set_execute_in_critical_section_name(const char* value, size_t size);
  ::std::string* mutable_execute_in_critical_section_name();
  ::std::string* release_execute_in_critical_section_name();
  void set_allocated_execute_in_critical_section_name(::std::string* execute_in_critical_section_name);
  ::std::string* unsafe_arena_release_execute_in_critical_section_name();
  void unsafe_arena_set_allocated_execute_in_critical_section_name(
      ::std::string* execute_in_critical_section_name);

  // bool exclusive_resource_access = 2;
  void clear_exclusive_resource_access();
  static const int kExclusiveResourceAccessFieldNumber = 2;
  bool exclusive_resource_access() const;
  void set_exclusive_resource_access(bool value);

  // @@protoc_insertion_point(class_scope:tensorflow.CriticalSectionExecutionDef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr execute_in_critical_section_name_;
  bool exclusive_resource_access_;
  mutable int _cached_size_;
  friend struct protobuf_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CriticalSectionDef

// string critical_section_name = 1;
inline void CriticalSectionDef::clear_critical_section_name() {
  critical_section_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CriticalSectionDef::critical_section_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CriticalSectionDef.critical_section_name)
  return critical_section_name_.Get();
}
inline void CriticalSectionDef::set_critical_section_name(const ::std::string& value) {
  
  critical_section_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CriticalSectionDef.critical_section_name)
}
#if LANG_CXX11
inline void CriticalSectionDef::set_critical_section_name(::std::string&& value) {
  
  critical_section_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.CriticalSectionDef.critical_section_name)
}
#endif
inline void CriticalSectionDef::set_critical_section_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  critical_section_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CriticalSectionDef.critical_section_name)
}
inline void CriticalSectionDef::set_critical_section_name(const char* value,
    size_t size) {
  
  critical_section_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CriticalSectionDef.critical_section_name)
}
inline ::std::string* CriticalSectionDef::mutable_critical_section_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CriticalSectionDef.critical_section_name)
  return critical_section_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CriticalSectionDef::release_critical_section_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CriticalSectionDef.critical_section_name)
  
  return critical_section_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CriticalSectionDef::unsafe_arena_release_critical_section_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CriticalSectionDef.critical_section_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return critical_section_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CriticalSectionDef::set_allocated_critical_section_name(::std::string* critical_section_name) {
  if (critical_section_name != NULL) {
    
  } else {
    
  }
  critical_section_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), critical_section_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CriticalSectionDef.critical_section_name)
}
inline void CriticalSectionDef::unsafe_arena_set_allocated_critical_section_name(
    ::std::string* critical_section_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (critical_section_name != NULL) {
    
  } else {
    
  }
  critical_section_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      critical_section_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CriticalSectionDef.critical_section_name)
}

// -------------------------------------------------------------------

// CriticalSectionExecutionDef

// string execute_in_critical_section_name = 1;
inline void CriticalSectionExecutionDef::clear_execute_in_critical_section_name() {
  execute_in_critical_section_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CriticalSectionExecutionDef::execute_in_critical_section_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
  return execute_in_critical_section_name_.Get();
}
inline void CriticalSectionExecutionDef::set_execute_in_critical_section_name(const ::std::string& value) {
  
  execute_in_critical_section_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
}
#if LANG_CXX11
inline void CriticalSectionExecutionDef::set_execute_in_critical_section_name(::std::string&& value) {
  
  execute_in_critical_section_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
}
#endif
inline void CriticalSectionExecutionDef::set_execute_in_critical_section_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  execute_in_critical_section_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
}
inline void CriticalSectionExecutionDef::set_execute_in_critical_section_name(const char* value,
    size_t size) {
  
  execute_in_critical_section_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
}
inline ::std::string* CriticalSectionExecutionDef::mutable_execute_in_critical_section_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
  return execute_in_critical_section_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CriticalSectionExecutionDef::release_execute_in_critical_section_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
  
  return execute_in_critical_section_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CriticalSectionExecutionDef::unsafe_arena_release_execute_in_critical_section_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return execute_in_critical_section_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CriticalSectionExecutionDef::set_allocated_execute_in_critical_section_name(::std::string* execute_in_critical_section_name) {
  if (execute_in_critical_section_name != NULL) {
    
  } else {
    
  }
  execute_in_critical_section_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), execute_in_critical_section_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
}
inline void CriticalSectionExecutionDef::unsafe_arena_set_allocated_execute_in_critical_section_name(
    ::std::string* execute_in_critical_section_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (execute_in_critical_section_name != NULL) {
    
  } else {
    
  }
  execute_in_critical_section_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      execute_in_critical_section_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name)
}

// bool exclusive_resource_access = 2;
inline void CriticalSectionExecutionDef::clear_exclusive_resource_access() {
  exclusive_resource_access_ = false;
}
inline bool CriticalSectionExecutionDef::exclusive_resource_access() const {
  // @@protoc_insertion_point(field_get:tensorflow.CriticalSectionExecutionDef.exclusive_resource_access)
  return exclusive_resource_access_;
}
inline void CriticalSectionExecutionDef::set_exclusive_resource_access(bool value) {
  
  exclusive_resource_access_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CriticalSectionExecutionDef.exclusive_resource_access)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto__INCLUDED
