# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow/contrib/gdr/gdr.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='tensorflow/contrib/gdr/gdr.proto',
  package='tensorflow',
  syntax='proto3',
  serialized_pb=_b('\n tensorflow/contrib/gdr/gdr.proto\x12\ntensorflow\"r\n\x12RemoteMemoryRegion\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\t\x12\x0c\n\x04\x61\x64\x64r\x18\x03 \x01(\x04\x12\x0c\n\x04rkey\x18\x04 \x01(\r\x12\x12\n\ntensor_key\x18\x05 \x01(\r\x12\x10\n\x08\x63hecksum\x18\x06 \x01(\x04\x42\x03\xf8\x01\x01\x62\x06proto3')
)




_REMOTEMEMORYREGION = _descriptor.Descriptor(
  name='RemoteMemoryRegion',
  full_name='tensorflow.RemoteMemoryRegion',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='host', full_name='tensorflow.RemoteMemoryRegion.host', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='tensorflow.RemoteMemoryRegion.port', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='addr', full_name='tensorflow.RemoteMemoryRegion.addr', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rkey', full_name='tensorflow.RemoteMemoryRegion.rkey', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tensor_key', full_name='tensorflow.RemoteMemoryRegion.tensor_key', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='checksum', full_name='tensorflow.RemoteMemoryRegion.checksum', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=48,
  serialized_end=162,
)

DESCRIPTOR.message_types_by_name['RemoteMemoryRegion'] = _REMOTEMEMORYREGION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

RemoteMemoryRegion = _reflection.GeneratedProtocolMessageType('RemoteMemoryRegion', (_message.Message,), dict(
  DESCRIPTOR = _REMOTEMEMORYREGION,
  __module__ = 'tensorflow.contrib.gdr.gdr_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.RemoteMemoryRegion)
  ))
_sym_db.RegisterMessage(RemoteMemoryRegion)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\370\001\001'))
# @@protoc_insertion_point(module_scope)
